# xdg base directories
export XDG_CACHE_HOME="$HOME"/.cache
export XDG_CONFIG_HOME="$HOME"/dotfiles/config
export XDG_DATA_HOME="$HOME"/.local/share

# dotfiles / zsh
export DOTFILES="$HOME"/dotfiles
export ZDOTDIR="$DOTFILES"/zsh

# xinit
export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
export XSERVERRC="$XDG_CONFIG_HOME"/X11/xserverrc

#####

export CARGO_HOME="$XDG_CONFIG_HOME"/cargo
. "$CARGO_HOME"/env

export NVM_DIR="$XDG_DATA_HOME"/nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

#####

export ATOM_HOME="$XDG_CONFIG_HOME"/atom
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export GEM_HOME="$XDG_DATA_HOME"/gem
export GEM_HOME="$XDG_CACHE_HOME"/gem
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
export KDEHOME="$XDG_CONFIG_HOME"/kde
export NUGET_PACKAGES="$XDG_CACHE_HOME"/nuget
export PYLINTHOME="$XDG_CACHE_HOME"/pylint
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
export WGETRC="$XDG_CONFIG_HOME"/wgetrc

#####

if [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
    exec startx $XINITRC
fi

